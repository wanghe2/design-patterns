
实现方式：

a)     抽象的命令角色 ， 如：菜单（规定可以点哪些菜）

b)     具体的命令角色（实现a 维护一个对c的引用），如：订单（已点的菜）

c)     接收者（具体执行命令的角色），实际操作时，很常见使用"聪明"命令对象，也就是直接实现了请求，而不是将工作委托给c (弊端？) 如：厨师接收订单后做菜

d)     调用者（维护一个对a的引用），如：服务员负责点菜并把订单推给厨师

e)     客户端 调用d发出命令进而执行c的方法，如：顾客点餐


