分享几种常用的设计模式:

1.design-pattern-single 单例模式
说明：单例模式是一种创建型设计模式， 让你能够保证一个类只有一个实例， 并提供一个访问该实例的全局节点。

2.design-pattern-strategy 策略模式
说明：策略模式是一种行为设计模式， 它能让你定义一系列算法， 并将每种算法分别放入独立的类中， 以使算法的对象能够相互替换。

3.design-pattern-proxy 代理模式  （静态代理 、动态代理）
说明：代理模式是一种结构型设计模式， 让你能够提供对象的替代品或其占位符。 代理控制着对于原对象的访问， 并允许在将请求提交给对象前后进行一些处理（可以联想切面）。

4.design-pattern-observer 观察者模式 
说明：观察者模式是一种行为设计模式， 允许你定义一种订阅机制， 可在对象事件发生时通知多个 “观察” 该对象的其他对象（又叫源-监听器模式）。

5.design-pattern-decorator 装饰者模式 
说明：装饰模式是一种结构型设计模式， 允许你通过将对象放入包含行为的特殊封装对象中来为原对象绑定新的行为。